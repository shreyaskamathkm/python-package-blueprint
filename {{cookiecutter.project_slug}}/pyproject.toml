[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author}}"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.11.7"
pyyaml = "^6.0.1"
rich = "14.1.0"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.3"
mypy = "^1.13.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"

[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = [
    "E",
    "W",      # see: https://pypi.org/project/pycodestyle
    "F",      # see: https://pypi.org/project/pyflakes
    "S",      # see: https://pypi.org/project/flake8-bandit
    "RUF018", # see: https://docs.astral.sh/ruff/rules/assignment-in-assert
    "UP",     # see: https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
extend-select = [
    "I",      # see: isort
    "C4",     # see: https://pypi.org/project/flake8-comprehensions
    "SIM",    # see: https://pypi.org/project/flake8-simplify
    "RET",    # see: https://pypi.org/project/flake8-return
    "PT",     # see: https://pypi.org/project/flake8-pytest-style
    "RUF100", # see: https://docs.astral.sh/ruff/rules/unused-noqa/
]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
    "S108",
    "E203", # conflicts with black
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
cli = "{{cookiecutter.project_slug}}.cli:cli"

[tool.mypy]
install_types = true
non_interactive = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
allow_redefinition = true
# disable this rule as the Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = false
